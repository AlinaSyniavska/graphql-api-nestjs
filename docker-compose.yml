version: '3.8'

services:
#  web-app:
#    container_name: web-app
#    build:
#      context: ./web-app
#      dockerfile: Dockerfile
#      args:
#        ENV_FILE: .env.local
#
#  nginx:
#    container_name: middlenginx
#    image: nginx:stable-alpine
#    expose:
#      - "80"
#    ports:
#      - "80:80"
#    volumes:
#      - ./nginx.middle.conf:/etc/nginx/conf.d/default.conf:rw
#    depends_on:
#      - web-api

  web-api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        ENV_FILE: .env
      # Only will build development stage from our dockerfile
      target: development
    environment:
      DATABASE_URL: postgresql://postgres:superuser@postgres:5432/graphql-movies-db?schema=public
    volumes:
      - ./api:/app
#      - /app/node_modules
    # Run a command against the development stage of the image
    command: npm run start:dev
    ports:
      - 5000:5000
    restart: on-failure
    depends_on:
      - postgres

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: graphql-movies-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: superuser
    ports:
      - '5432:5432'
    volumes:
      - docker-nest-postgres:/var/lib/postgresql/data
volumes:
  docker-nest-postgres: